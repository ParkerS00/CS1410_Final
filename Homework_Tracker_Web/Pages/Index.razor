@page "/"
@using CS_1410_Final_Proj_Lib

<PageTitle>Index</PageTitle>

@if (showThings == true)
{
    <h1>Welcome to my Homework Tracker</h1>
    <p>What would you like to do?</p>

    <button onclick="@ToLogInScreen">Log in</button><br><br>

    <button onclick="@ToCreateAccountScreen">Create Account</button><br><br>

    <button>View Example To-Do List</button> <br><br>


}

@if (logInClicked == true && showThings == false)
{
    <p> Please enter your firstname</p>
    <input type=text @bind="FirstName" /><br><br>

    <p>Please enter your lastname</p>
    <input type=text @bind="LastName" /><br><br>

    <p>Please enter your password</p>
    <input type=text @bind="Password" /><br><br>

    <p>Please enter your Id</p>
    <input type=text @bind="Id" /><br><br>

    <button onclick="@LogIn">Log In</button>
}

@if (createAccountClicked == true && showThings == false)
{
    <p> Please enter your firstname</p>
    <input type=text @bind="FirstName" /><br><br>

    <p>Please enter your lastname</p>
    <input type=text @bind="LastName" /><br><br>

    <p>Please enter your password</p>
    <input type=text @bind="Password" /><br><br>

    <p>Please enter your Id</p>
    <input type=text @bind="Id" /><br><br>

    <button onclick="@CreateAccount">Create Account</button>
}

@if (logInsMatch == true && showThings == false && fakeBool == true)
{
    <p>What would you like to do?</p>

    <button onclick="@ToViewHomeworkPage">View your to do list</button><br><br>

    <button onclick="@ToAddHomeworkPage">Add to your to do list</button><br><br>

    <button onclick="@goToRemoveFromListPage">Remove from your to do list</button><br><br>

    <button onclick="@LogOut">Log out</button><br><br>

}

@if (homeworkAddedToListClicked == true && showThings == false)
{
    <h1>What would you like to add to your homework list?</h1>

    <p>Name of the assignment</p>
    <input type=text @bind="AssignmentName"><br><br>

    <p>Date that the assignment was added</p>
    <input type=text @bind="DateAdded"><br><br>

    <p>Date that the assignment is due</p>
    <input type=text @bind="DueDate"><br><br>

    <p>Points the assignment is worth</p>
    <input type=text @bind="PointsWorth"><br><br>

    <button onclick="@CreateHomeworkPage">Add To To-Do List</button><br><br>
}

@if (viewHomeworkPageClicked == true && showThings == false && goBack == true)
{
    if (File.Exists(userToDoFile))
    {
        foreach (var lines in File.ReadAllLines(userToDoFile))
        {
            <p>@lines</p>
        }
    }

    <button onclick="@goBackToLogInPage">Go back</button>
}

@if (removeItemFromListClicked == true && showThings == false && fakeBool == false)
{
    <p>What would you like to remove from your to do list?</p>
    if (File.Exists(userToDoFile))
    {
        foreach (var lines in File.ReadAllLines(userToDoFile))
        {
            <p>@lines</p>
        }
    }


    int i = 1;
    List<string> toDoList = new List<string>();
    foreach (var lines in File.ReadAllLines(userToDoFile))
    {
        toDoList.Add(lines);
        //Console.WriteLine(lines + "   " + i);
        i++;
    }
    toDoList.RemoveAt(linesRemoved);
    File.WriteAllLines(userToDoFile, toDoList);

    <p>What item would you like to remove?</p>
    <input type=text @bind="linesRemoved"><br><br>


    <button onclick="=@removeFromList">Remove from list</button>
    removeItemFromListClicked = false;
    fakeBool = true;
    logInsMatch = true;
}



@code {

    public static bool showThings = true;
    public static bool logInClicked = false;
    public static bool createAccountClicked = false;
    public static bool logInsMatch = false;
    public static bool firstNamesMatch = false;
    public static bool lastNamesMatch = false;
    public static bool passwordsMatch = false;
    public static bool idsMatch = false;
    public static bool fakeBool = false;
    public static bool homeworkAddedToListClicked = false;
    public static bool viewHomeworkPageClicked = false;
    public static bool goBack = false;
    public static bool removeItemFromListClicked = false;
    public static List<Person> People;
    Person person = new();
    Homework homework = new();
    public static int linesRemoved;
    public static int amountOfLines;
    public static string userToDoFile;


    string FirstName;
    string LastName;
    int Password;
    int Id;

    string AssignmentName;
    DateTime DateAdded;
    DateTime DueDate;
    int PointsWorth;

    public void LogOut()
    {
        firstNamesMatch = false;
        lastNamesMatch = false;
        idsMatch = false;
        passwordsMatch = false;
        showThings = true;
        logInClicked = false;
        createAccountClicked = false;
        logInsMatch = false;
    }

    public void LoadPeople()
    {
        if (File.Exists("people.txt"))
        {
            People = person.LoadPerson("people.txt");
        }
        else
        {
            File.Create("people.txt");
        }
    }

    public void ToLogInScreen()
    {
        showThings = false;
        logInClicked = true;
        firstNamesMatch = false;
        lastNamesMatch = false;
        passwordsMatch = false;
        idsMatch = false;
    }

    public void LogIn()
    {
        Person User = new Person(FirstName, LastName, Password, Id);
        foreach (var lines in File.ReadAllLines("people.txt"))
        {
            var parts = lines.Split(":");
            if (User.FirstName == parts[1].ToString())
            {
                firstNamesMatch = true;
                userToDoFile = $"{User.FirstName}.txt";
            }
            if (User.LastName == parts[1])
            {
                lastNamesMatch = true;
            }
            if (User.Password.ToString() == parts[1])
            {
                passwordsMatch = true;
            }
            if (User.Id.ToString() == parts[1])
            {
                idsMatch = true;
            }
        }

        if (firstNamesMatch == true && lastNamesMatch == true && passwordsMatch == true && idsMatch == true)
        {
            logInsMatch = true;
            showThings = false;
            fakeBool = true;
            logInClicked = false;
        }
        if (firstNamesMatch == false || lastNamesMatch == false || passwordsMatch == false || idsMatch == false)
        {
            logInsMatch = false;
            Console.WriteLine("Something you gave me doesn't match up with our system, or you haven't created an account yet.");
            Console.WriteLine($"Firstname is {firstNamesMatch}");
            Console.WriteLine($"Lastname is {lastNamesMatch}");
            Console.WriteLine($"Password is {passwordsMatch}");
            Console.WriteLine($"Id is {idsMatch}");
            showThings = true;
            logInClicked = false;

        }
    }

    public void ToCreateAccountScreen()
    {
        showThings = false;
        createAccountClicked = true;
    }

    public void CreateAccount()
    {
        Person User = new Person(FirstName, LastName, Password, Id);
        User.SavePerson();
        userToDoFile = $"{User.FirstName}.txt";
        showThings = true;
        createAccountClicked = false;
        //Console.WriteLine(userToDoFile);
    }

    public void ToAddHomeworkPage()
    {
        showThings = false;
        homeworkAddedToListClicked = true;
        fakeBool = false;
    }

    public void CreateHomeworkPage()
    {
        Homework assignment = new Homework(AssignmentName, DateAdded, DueDate, PointsWorth);
        assignment.addToDoList(AssignmentName, DateAdded, DueDate, PointsWorth);
        if (File.Exists(userToDoFile))
        {
            assignment.saveHomework(userToDoFile);
            homeworkAddedToListClicked = false;
            fakeBool = true;
        }
        else
        {
            File.Create(userToDoFile).Close();
            assignment.saveHomework(userToDoFile);
            homeworkAddedToListClicked = false;
            fakeBool = true;
        }
        //Console.WriteLine(userToDoFile);
    }

    public void ToViewHomeworkPage()
    {
        showThings = false;
        viewHomeworkPageClicked = true;
        fakeBool = false;
        goBack = true;
    }

    public void goBackToLogInPage()
    {
        fakeBool = true;
        goBack = false;
    }

    public void goToRemoveFromListPage()
    {
        showThings = false;
        removeItemFromListClicked = true;
        fakeBool = false;
    }

    public void removeFromList()
    {
        homework.removeToDoList(linesRemoved, userToDoFile);

    }
}
